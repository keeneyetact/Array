[
    {
        "userId": 1,
        "uniqe": 343,
        "id": 1,
        "title": " How to Shape of Character Design",
        "write": "Jun Bale",
        "date": "20-12-20",
        "time": "10:00AM",
        "Name": "CSS",
        "Description": " This is my Description",
        "Slug": "How to Shape of...",
        "Count": 8,
        "body": " Because he takes  nsuscipit accepted result lightly with  nreprehenderit discomfort may be the entire  nnostrum of the things that happens is that they are extremely ",
        "image": "https://source.unsplash.com/rDEOVtE7vOs",
        "tag": [
            "good",
            "great",
            "javascript",
            "wife"
        ],
        "blocks": [
            {
                "type": "header",
                "data": {
                    "text": "Write here",
                    "level": 2
                }
            },
            {
                "type": "paragraph",
                "data": {
                    "text": "..."
                }
            }
        ]
    },
    {
        "userId": 6,
        "uniqe": 123,
        "id": 2,
        "write": "Henry Cavil",
        "date": "21-12-20",
        "time": "08:00AM",
        "Name": "Life",
        "Description": " This is my Description for Life",
        "Slug": "How to Write...",
        "Count": 2,
        "title": " How to Write About Your Life? Start Here .",
        "body": " it is the time of  nseq are not criticize consumer happy that the pain or  nfugiat soothing pleasure forward or no discomfort may rejecting some  nWho, not being due, we may be able to open the man who did not, but there is no ",
        "image": "https://source.unsplash.com/WNoLnJo7tS8/1600x900",
        "tag": [
            "happy",
            "USA",
            "no",
            "wife"
        ],
        "blocks": [
            {
                "type": "header",
                "data": {
                    "text": "How to Write About Your Life? Start Here",
                    "level": 2
                }
            },
            {
                "type": "paragraph",
                "data": {
                    "text": "Hey. Meet the new Editor. On this page you can see it in action ‚Äî try to edit this text."
                }
            },
            {
                "type": "header",
                "data": {
                    "text": "Key features",
                    "level": 3
                }
            },
            {
                "type": "list",
                "data": {
                    "style": "unordered",
                    "items": [
                        "It is a block-styled editor",
                        "It returns clean data output in JSON",
                        "Designed to be extendable and pluggable with a simple API"
                    ]
                }
            },
            {
                "type": "header",
                "data": {
                    "text": "What does it mean",
                    "level": 3
                }
            },
            {
                "type": "paragraph",
                "data": {
                    "text": "Workspace in classic editors is made of a single contenteditable element, used to create different HTML markups. Editor.js <mark class='cdx-marker'>workspace consists of separate Blocks: paragraphs, headings, images, lists, quotes, etc</mark>. Each of them is an independent contenteditable element (or more complex structure) provided by Plugin and united by Editor s Core."
                }
            },
            {
                "type": "paragraph",
                "data": {
                    "text": " There are dozens of <a href='https://github.com/editor-js'>ready-to-use Blocks</a> and the <a href='https://editorjs.io/creating-a-block-tool'>simple API</a> for creation any Block you need. For example, you can implement Blocks for Tweets, Instagram posts, surveys and polls, CTA-buttons and even games."
                }
            },
            {
                "type": "header",
                "data": {
                    "text": "What does it mean clean data output",
                    "level": 3
                }
            },
            {
                "type": "paragraph",
                "data": {
                    "text": "Classic WYSIWYG-editors produce raw HTML-markup with both content data and content appearance. On the contrary, Editor.js outputs JSON object with data of each Block. You can see an example below"
                }
            },
            {
                "type": "paragraph",
                "data": {
                    "text": "Given data can be used as you want: render with HTML for <code class='inline-code'>Web clients</code>, render natively for <code class='inline-code'>mobile apps</code>, create markup for <code class='inline-code'>Facebook Instant Articles</code> or <code class='inline-code'>Google AMP</code>, generate an <code class='inline-code'>audio version</code> and so on."
                }
            },
            {
                "type": "paragraph",
                "data": {
                    "text": "Clean data is useful to sanitize, validate and process on the backend."
                }
            },
            {
                "type": "delimiter",
                "data": {}
            },
            {
                "type": "paragraph",
                "data": {
                    "text": "We have been working on this project more than three years. Several large media projects help us to test and debug the Editor, to make it's core more stable. At the same time we significantly improved the API. Now, it can be used to create any plugin for any task. Hope you enjoy. üòè"
                }
            },
            {
                "type": "image",
                "data": {
                    "file": {
                        "url": "https://codex.so/upload/redactor_images/o_e48549d1855c7fc1807308dd14990126.jpg"
                    },
                    "caption": "demo ",
                    "withBorder": true,
                    "stretched": false,
                    "withBackground": false
                }
            }
        ]
    },
    {
        "userId": 9,
        "uniqe": 453,
        "id": 3,
        "write": "Katrina Taylor",
        "date": "24-12-20",
        "time": "06:49PM",
        "Name": "Freelancer",
        "Description": " This is my Description for Freelancer",
        "Slug": "How to Survive... ",
        "Count": 9,
        "title": " How to Survive as a Freelancer in 2020 ",
        "body": " innocent, but the law  nvoluptatis blinded the election or the  nvoluptatis pains or prosecutors who is to pay nmolestiae and is willing to further or to and from the toil of an odious term ",
        "image": "https://source.unsplash.com/vMV6r4VRhJ8/",
        "tag": [
            "indian",
            "babbyes",
            "java",
            "hate"
        ],
        "blocks": [
            {
                "type": "header",
                "data": {
                    "text": "data.title",
                    "level": 2
                }
            },
            {
                "type": "paragraph",
                "data": {
                    "text": "Hey. Meet the new Editor. On this page you can see it in action ‚Äî try to edit this text."
                }
            },
            {
                "type": "header",
                "data": {
                    "text": "Key features",
                    "level": 3
                }
            },
            {
                "type": "list",
                "data": {
                    "style": "unordered",
                    "items": [
                        "It is a block-styled editor",
                        "It returns clean data output in JSON",
                        "Designed to be extendable and pluggable with a simple API"
                    ]
                }
            },
            {
                "type": "header",
                "data": {
                    "text": "What does it mean ¬´block-styled editor¬ª",
                    "level": 3
                }
            },
            {
                "type": "paragraph",
                "data": {
                    "text": "Workspace in classic editors is made of a single contenteditable element, used to create different HTML markups. Editor.js <mark class='cdx-marker'>workspace consists of separate Blocks: paragraphs, headings, images, lists, quotes, etc</mark>. Each of them is an independent contenteditable element (or more complex structure) provided by Plugin and united by Editor s Core."
                }
            },
            {
                "type": "paragraph",
                "data": {
                    "text": " There are dozens of <a href='https://github.com/editor-js'>ready-to-use Blocks</a> and the <a href='https://editorjs.io/creating-a-block-tool'>simple API</a> for creation any Block you need. For example, you can implement Blocks for Tweets, Instagram posts, surveys and polls, CTA-buttons and even games."
                }
            },
            {
                "type": "header",
                "data": {
                    "text": "What does it mean clean data output",
                    "level": 3
                }
            },
            {
                "type": "paragraph",
                "data": {
                    "text": "Classic WYSIWYG-editors produce raw HTML-markup with both content data and content appearance. On the contrary, Editor.js outputs JSON object with data of each Block. You can see an example below"
                }
            },
            {
                "type": "paragraph",
                "data": {
                    "text": "Given data can be used as you want: render with HTML for <code class='inline-code'>Web clients</code>, render natively for <code class='inline-code'>mobile apps</code>, create markup for <code class='inline-code'>Facebook Instant Articles</code> or <code class='inline-code'>Google AMP</code>, generate an <code class='inline-code'>audio version</code> and so on."
                }
            },
            {
                "type": "paragraph",
                "data": {
                    "text": "Clean data is useful to sanitize, validate and process on the backend."
                }
            },
            {
                "type": "delimiter",
                "data": {}
            },
            {
                "type": "paragraph",
                "data": {
                    "text": "We have been working on this project more than three years. Several large media projects help us to test and debug the Editor, to make it's core more stable. At the same time we significantly improved the API. Now, it can be used to create any plugin for any task. Hope you enjoy. üòè"
                }
            },
            {
                "type": "image",
                "data": {
                    "file": {
                        "url": "https://codex.so/upload/redactor_images/o_e48549d1855c7fc1807308dd14990126.jpg"
                    },
                    "caption": "demo ",
                    "withBorder": true,
                    "stretched": false,
                    "withBackground": false
                }
            }
        ]
    },
    {
        "userId": 12,
        "id": 4,
        "uniqe": 165,
        "write": "Christian",
        "date": "26-12-20",
        "time": "09:00PM",
        "Name": "Dating",
        "Description": " This is my Description for dating",
        "Slug": "Need help with...",
        "Count": 6,
        "title": " Need help with your dating profile?",
        "body": " any and often rejecting a pleasure to get  mƒÅnsit film will take to provide the fault  nquir is advantageous not know how the bound and pain the law  nFor the pleasure of the outdoor ",
        "image": "https://source.unsplash.com/mEZ3PoFGs_k/1600x900",
        "tag": [
            "babby",
            "no",
            "viw",
            "wife"
        ],
        "blocks": [
            {
                "type": "header",
                "data": {
                    "text": "data.title",
                    "level": 2
                }
            },
            {
                "type": "paragraph",
                "data": {
                    "text": "Hey. Meet the new Editor. On this page you can see it in action ‚Äî try to edit this text."
                }
            },
            {
                "type": "header",
                "data": {
                    "text": "Key features",
                    "level": 3
                }
            },
            {
                "type": "list",
                "data": {
                    "style": "unordered",
                    "items": [
                        "It is a block-styled editor",
                        "It returns clean data output in JSON",
                        "Designed to be extendable and pluggable with a simple API"
                    ]
                }
            },
            {
                "type": "header",
                "data": {
                    "text": "What does it mean ¬´block-styled editor¬ª",
                    "level": 3
                }
            },
            {
                "type": "paragraph",
                "data": {
                    "text": "Workspace in classic editors is made of a single contenteditable element, used to create different HTML markups. Editor.js <mark class='cdx-marker'>workspace consists of separate Blocks: paragraphs, headings, images, lists, quotes, etc</mark>. Each of them is an independent contenteditable element (or more complex structure) provided by Plugin and united by Editor s Core."
                }
            },
            {
                "type": "paragraph",
                "data": {
                    "text": " There are dozens of <a href='https://github.com/editor-js'>ready-to-use Blocks</a> and the <a href='https://editorjs.io/creating-a-block-tool'>simple API</a> for creation any Block you need. For example, you can implement Blocks for Tweets, Instagram posts, surveys and polls, CTA-buttons and even games."
                }
            },
            {
                "type": "header",
                "data": {
                    "text": "What does it mean clean data output",
                    "level": 3
                }
            },
            {
                "type": "paragraph",
                "data": {
                    "text": "Classic WYSIWYG-editors produce raw HTML-markup with both content data and content appearance. On the contrary, Editor.js outputs JSON object with data of each Block. You can see an example below"
                }
            },
            {
                "type": "paragraph",
                "data": {
                    "text": "Given data can be used as you want: render with HTML for <code class='inline-code'>Web clients</code>, render natively for <code class='inline-code'>mobile apps</code>, create markup for <code class='inline-code'>Facebook Instant Articles</code> or <code class='inline-code'>Google AMP</code>, generate an <code class='inline-code'>audio version</code> and so on."
                }
            },
            {
                "type": "paragraph",
                "data": {
                    "text": "Clean data is useful to sanitize, validate and process on the backend."
                }
            },
            {
                "type": "delimiter",
                "data": {}
            },
            {
                "type": "paragraph",
                "data": {
                    "text": "We have been working on this project more than three years. Several large media projects help us to test and debug the Editor, to make it's core more stable. At the same time we significantly improved the API. Now, it can be used to create any plugin for any task. Hope you enjoy. üòè"
                }
            },
            {
                "type": "image",
                "data": {
                    "file": {
                        "url": "https://source.unsplash.com/random"
                    },
                    "caption": "demo ",
                    "withBorder": true,
                    "stretched": false,
                    "withBackground": false
                }
            }
        ]
    },
    {
        "userId": 14,
        "id": 5,
        "uniqe": 150,
        "title": "Little Steps You Can Take to Become a Better Writer ",
        "write": "Robert Downey",
        "date": "28-12-20",
        "time": "05:00AM",
        "Name": "Writer",
        "Description": " This is my Description for Writer",
        "body":"the law  nvoluptatis blinded the election or the  nvoluptatis pains or prosecutors who is to pay nmolestiae and is willing to further",
        "Slug": "Little Steps You Can...",
        "Count": 4,
        "image": "https://source.unsplash.com/6W4F62sN_yI",
        "tag": [
            "love",
            "fake",
            "react",
            "work"
        ],
        "blocks": [
            {
                "type": "header",
                "data": {
                    "text": "data.title",
                    "level": 2
                }
            },
            {
                "type": "paragraph",
                "data": {
                    "text": "Hey. Meet the new Editor. On this page you can see it in action ‚Äî try to edit this text."
                }
            },
            {
                "type": "header",
                "data": {
                    "text": "Key features",
                    "level": 3
                }
            },
            {
                "type": "list",
                "data": {
                    "style": "unordered",
                    "items": [
                        "It is a block-styled editor",
                        "It returns clean data output in JSON",
                        "Designed to be extendable and pluggable with a simple API"
                    ]
                }
            },
            {
                "type": "header",
                "data": {
                    "text": "What does it mean ¬´block-styled editor¬ª",
                    "level": 3
                }
            },
            {
                "type": "paragraph",
                "data": {
                    "text": "Workspace in classic editors is made of a single contenteditable element, used to create different HTML markups. Editor.js <mark class='cdx-marker'>workspace consists of separate Blocks: paragraphs, headings, images, lists, quotes, etc</mark>. Each of them is an independent contenteditable element (or more complex structure) provided by Plugin and united by Editor s Core."
                }
            },
            {
                "type": "paragraph",
                "data": {
                    "text": " There are dozens of <a href='https://github.com/editor-js'>ready-to-use Blocks</a> and the <a href='https://editorjs.io/creating-a-block-tool'>simple API</a> for creation any Block you need. For example, you can implement Blocks for Tweets, Instagram posts, surveys and polls, CTA-buttons and even games."
                }
            },
            {
                "type": "header",
                "data": {
                    "text": "What does it mean clean data output",
                    "level": 3
                }
            },
            {
                "type": "paragraph",
                "data": {
                    "text": "Classic WYSIWYG-editors produce raw HTML-markup with both content data and content appearance. On the contrary, Editor.js outputs JSON object with data of each Block. You can see an example below"
                }
            },
            {
                "type": "paragraph",
                "data": {
                    "text": "Given data can be used as you want: render with HTML for <code class='inline-code'>Web clients</code>, render natively for <code class='inline-code'>mobile apps</code>, create markup for <code class='inline-code'>Facebook Instant Articles</code> or <code class='inline-code'>Google AMP</code>, generate an <code class='inline-code'>audio version</code> and so on."
                }
            },
            {
                "type": "paragraph",
                "data": {
                    "text": "Clean data is useful to sanitize, validate and process on the backend."
                }
            },
            {
                "type": "delimiter",
                "data": {}
            },
            {
                "type": "paragraph",
                "data": {
                    "text": "We have been working on this project more than three years. Several large media projects help us to test and debug the Editor, to make it's core more stable. At the same time we significantly improved the API. Now, it can be used to create any plugin for any task. Hope you enjoy. üòè"
                }
            },
            {
                "type": "image",
                "data": {
                    "file": {
                        "url": "https://codex.so/upload/redactor_images/o_e48549d1855c7fc1807308dd14990126.jpg"
                    },
                    "caption": "demo ",
                    "withBorder": true,
                    "stretched": false,
                    "withBackground": false
                }
            }
        ]
    }
]